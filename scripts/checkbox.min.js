gj.checkbox={plugins:{}},gj.checkbox.config={base:{uiLibrary:"materialdesign",iconsLibrary:"materialicons",style:{wrapperCssClass:"gj-checkbox-md",spanCssClass:void 0}},bootstrap:{style:{wrapperCssClass:"gj-checkbox-bootstrap"},iconsLibrary:"glyphicons"},bootstrap4:{style:{wrapperCssClass:"gj-checkbox-bootstrap gj-checkbox-bootstrap-4"},iconsLibrary:"materialicons"},bootstrap5:{style:{wrapperCssClass:"gj-checkbox-bootstrap gj-checkbox-bootstrap-5"},iconsLibrary:"materialicons"},materialicons:{style:{iconsCssClass:"gj-checkbox-material-icons",spanCssClass:"gj-icon"}},glyphicons:{style:{iconsCssClass:"gj-checkbox-glyphicons",spanCssClass:""}},fontawesome:{style:{iconsCssClass:"gj-checkbox-fontawesome",spanCssClass:"fa"}}},gj.checkbox.methods={init:function(jsConfig){var $chkb=this;return gj.widget.prototype.init.call(this,jsConfig,"checkbox"),this.attr("data-checkbox","true"),gj.checkbox.methods.initialize(this),this},initialize:function($chkb){var data=$chkb.data(),$wrapper,$span;data.style.wrapperCssClass&&($wrapper=$('<label class="'+data.style.wrapperCssClass+" "+data.style.iconsCssClass+'"></label>'),$chkb.attr("id")&&$wrapper.attr("for",$chkb.attr("id")),$chkb.wrap($wrapper),$span=$("<span />"),data.style.spanCssClass&&$span.addClass(data.style.spanCssClass),$chkb.parent().append($span))},state:function($chkb,value){return value?("checked"===value?($chkb.prop("indeterminate",!1),$chkb.prop("checked",!0)):"unchecked"===value?($chkb.prop("indeterminate",!1),$chkb.prop("checked",!1)):"indeterminate"===value&&($chkb.prop("checked",!0),$chkb.prop("indeterminate",!0)),gj.checkbox.events.change($chkb,value),$chkb):value=$chkb.prop("indeterminate")?"indeterminate":$chkb.prop("checked")?"checked":"unchecked"},toggle:function($chkb){return"checked"==$chkb.state()?$chkb.state("unchecked"):$chkb.state("checked"),$chkb},destroy:function($chkb){return"true"===$chkb.attr("data-checkbox")&&($chkb.removeData(),$chkb.removeAttr("data-guid"),$chkb.removeAttr("data-checkbox"),$chkb.off(),$chkb.next("span").remove(),$chkb.unwrap()),$chkb}},gj.checkbox.events={change:function($chkb,state){return $chkb.triggerHandler("change",[state])}},gj.checkbox.widget=function($element,jsConfig){var self=this,methods=gj.checkbox.methods;return this.toggle=function(){return methods.toggle(this)},this.state=function(value){return methods.state(this,value)},this.destroy=function(){return methods.destroy(this)},$.extend($element,this),"true"!==$element.attr("data-checkbox")&&methods.init.call($element,jsConfig),$element},gj.checkbox.widget.prototype=new gj.widget,gj.checkbox.widget.constructor=gj.checkbox.widget,function($){$.fn.checkbox=function(method){var $widget;if(this&&this.length){if("object"!=typeof method&&method){if(($widget=new gj.checkbox.widget(this,null))[method])return $widget[method].apply(this,Array.prototype.slice.call(arguments,1));throw"Method "+method+" does not exist."}return new gj.checkbox.widget(this,method)}}}(jQuery);