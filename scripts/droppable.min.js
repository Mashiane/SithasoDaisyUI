gj.droppable={plugins:{}},gj.droppable.config={hoverClass:void 0},gj.droppable.methods={init:function(jsConfig){var $dropEl=this;return gj.widget.prototype.init.call(this,jsConfig,"droppable"),this.attr("data-droppable","true"),gj.documentManager.subscribeForEvent("mousedown",this.data("guid"),gj.droppable.methods.createMouseDownHandler(this)),gj.documentManager.subscribeForEvent("mousemove",this.data("guid"),gj.droppable.methods.createMouseMoveHandler(this)),gj.documentManager.subscribeForEvent("mouseup",this.data("guid"),gj.droppable.methods.createMouseUpHandler(this)),this},createMouseDownHandler:function($dropEl){return function(e){$dropEl.isDragging=!0}},createMouseMoveHandler:function($dropEl){return function(e){if($dropEl.isDragging){var hoverClass=$dropEl.data("hoverClass"),mousePosition={x:$dropEl.mouseX(e),y:$dropEl.mouseY(e)},newIsOver=gj.droppable.methods.isOver($dropEl,mousePosition);newIsOver!=$dropEl.isOver&&(newIsOver?(hoverClass&&$dropEl.addClass(hoverClass),gj.droppable.events.over($dropEl,mousePosition)):(hoverClass&&$dropEl.removeClass(hoverClass),gj.droppable.events.out($dropEl))),$dropEl.isOver=newIsOver}}},createMouseUpHandler:function($dropEl){return function(e){var mousePosition={left:$dropEl.mouseX(e),top:$dropEl.mouseY(e)};$dropEl.isDragging=!1,gj.droppable.methods.isOver($dropEl,mousePosition)&&gj.droppable.events.drop($dropEl)}},isOver:function($dropEl,mousePosition){var offsetTop=$dropEl.offset().top,offsetLeft=$dropEl.offset().left;return mousePosition.x>offsetLeft&&mousePosition.x<offsetLeft+$dropEl.outerWidth(!0)&&mousePosition.y>offsetTop&&mousePosition.y<offsetTop+$dropEl.outerHeight(!0)},destroy:function($dropEl){return"true"===$dropEl.attr("data-droppable")&&(gj.documentManager.unsubscribeForEvent("mousedown",$dropEl.data("guid")),gj.documentManager.unsubscribeForEvent("mousemove",$dropEl.data("guid")),gj.documentManager.unsubscribeForEvent("mouseup",$dropEl.data("guid")),$dropEl.removeData(),$dropEl.removeAttr("data-guid"),$dropEl.removeAttr("data-droppable"),$dropEl.off("drop").off("over").off("out")),$dropEl}},gj.droppable.events={drop:function($dropEl,offsetX,offsetY){$dropEl.trigger("drop",[{top:offsetY,left:offsetX}])},over:function($dropEl,mousePosition){$dropEl.trigger("over",[mousePosition])},out:function($dropEl){$dropEl.trigger("out")}},gj.droppable.widget=function($element,jsConfig){var self=this,methods=gj.droppable.methods;return this.isOver=!1,this.isDragging=!1,this.destroy=function(){return methods.destroy(this)},this.isOver=function(mousePosition){return methods.isOver(this,mousePosition)},$.extend($element,this),"true"!==$element.attr("data-droppable")&&methods.init.call($element,jsConfig),$element},gj.droppable.widget.prototype=new gj.widget,gj.droppable.widget.constructor=gj.droppable.widget,function($){$.fn.droppable=function(method){var $widget;if(this&&this.length){if("object"!=typeof method&&method){if(($widget=new gj.droppable.widget(this,null))[method])return $widget[method].apply(this,Array.prototype.slice.call(arguments,1));throw"Method "+method+" does not exist."}return new gj.droppable.widget(this,method)}}}(jQuery);